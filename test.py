import os
from pyrogram import Client, filters
from pyrogram.errors import RPCError, UserNotParticipant

# --- Config ---
API_ID = int(os.environ.get("API_ID", "27074109"))
API_HASH = os.environ.get("API_HASH", "301e069d266e091df4bd58353679f3b1")
BOT_TOKEN = os.environ.get("BOT_TOKEN", "8292399578:AAH2jrVBWHnCTLCsEr7pcCZF89XqxPCkKRY")
CHANNEL_ID = int(os.environ.get("CHANNEL_ID", "-1003087895191"))
ADMIN_ID = int(os.environ.get("ADMIN_ID", "7006516881"))

app = Client("joinreq_bot", api_id=API_ID, api_hash=API_HASH, bot_token=BOT_TOKEN)


def is_member_status(status: str) -> bool:
    if not status:
        return False
    status = status.lower()
    return status in ("member", "administrator", "creator")


# /start -> join-request link
@app.on_message(filters.command("start") & filters.private)
async def start_handler(client, message):
    try:
        invite = await client.create_chat_invite_link(
            chat_id=CHANNEL_ID,
            creates_join_request=True
        )
        await message.reply_text(
            f"üëâ ‡§Ø‡§π‡§æ‡§Å ‡§§‡•Å‡§Æ‡•ç‡§π‡§æ‡§∞‡§æ join-request link ‡§π‡•à:\n\n{invite.invite_link}\n\n"
            "Request ‡§≠‡•á‡§ú‡•ã, ‡§´‡§ø‡§∞ /check ‡§∏‡•á status ‡§¶‡•á‡§ñ ‡§∏‡§ï‡§§‡•á ‡§π‡•ã‡•§"
        )
    except RPCError as e:
        await message.reply_text("‚ùå Join-request link ‡§¨‡§®‡§æ‡§®‡•á ‡§Æ‡•á‡§Ç error ‡§Ü‡§Ø‡§æ‡•§\nBot ‡§ï‡•ã channel ‡§ï‡§æ admin ‡§¨‡§®‡§æ‡§ì‡•§")
        print("create_chat_invite_link error:", e)


# /check -> member / pending / not sent
@app.on_message(filters.command("check") & filters.private)
async def check_handler(client, message):
    user_id = message.from_user.id
    try:
        # 1) ‡§™‡§π‡§≤‡•á check ‡§ï‡§∞‡•á‡§Ç approved member ‡§π‡•à ‡§Ø‡§æ ‡§®‡§π‡•Ä‡§Ç
        member = await client.get_chat_member(CHANNEL_ID, user_id)
        if is_member_status(getattr(member, "status", None)):
            await message.reply_text("‚úÖ ‡§§‡•Å‡§Æ‡•ç‡§π‡§æ‡§∞‡•Ä request approve ‡§π‡•ã ‡§ö‡•Å‡§ï‡•Ä ‡§π‡•à, ‡§§‡•Å‡§Æ channel member ‡§π‡•ã‡•§")
            return
    except UserNotParticipant:
        pass  # ‡§Ö‡§ó‡§∞ member ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à ‡§§‡•ã ‡§®‡•Ä‡§ö‡•á pending check ‡§ï‡§∞‡•á‡§Ç‡§ó‡•á
    except RPCError as e:
        await message.reply_text("‚ö†Ô∏è Error: bot ‡§∂‡§æ‡§Ø‡§¶ channel ‡§ï‡§æ admin ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à‡•§")
        print("get_chat_member error:", e)
        return

    # 2) ‡§Ö‡§ó‡§∞ member ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à, ‡§§‡•ã pending list check ‡§ï‡§∞‡•ã
    try:
        pending_requests = await client.get_chat_join_requests(CHANNEL_ID, limit=200)
        if any(req.from_user.id == user_id for req in pending_requests):
            await message.reply_text("‚åõ ‡§§‡•Å‡§Æ‡•ç‡§π‡§æ‡§∞‡•Ä request ‡§Ö‡§≠‡•Ä PENDING ‡§π‡•à, admin ‡§ï‡•á approval ‡§ï‡§æ ‡§á‡§Ç‡§§‡§ú‡§º‡§æ‡§∞ ‡§π‡•à‡•§")
        else:
            await message.reply_text("‚ùå ‡§§‡•Å‡§Æ‡•ç‡§π‡§æ‡§∞‡•Ä request pending ‡§Æ‡•á‡§Ç ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à (‡§∂‡§æ‡§Ø‡§¶ ‡§≠‡•á‡§ú‡•Ä ‡§π‡•Ä ‡§®‡§π‡•Ä‡§Ç ‡§Ø‡§æ reject ‡§π‡•ã ‡§ó‡§à)‡•§")
    except RPCError as e:
        await message.reply_text("‚ö†Ô∏è Pending requests check ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç error ‡§Ü‡§Ø‡§æ‡•§")
        print("get_chat_join_requests error:", e)


if __name__ == "__main__":
    print("Bot is running...")
    app.run()
